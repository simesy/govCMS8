services:
  app:
    # Use PHP 7.2 with Apache to serve the Drupal site
    image: simesy/smaller-tugboat

    # Set this as the default service. This does a few things
    #   1. Clones the git repository into the service container
    #   2. Exposes port 80 to the Tugboat HTTP proxy
    #   3. Routes requests to the preview URL to this service
    default: true

    # Wait until the mysql service is done building
    depends: db

    visualdiffs:
      :default:
        - /
        - /test
        - /blog/example
        - /events

    # A set of commands to run while building this service
    commands:
      # Commands that set up the basic preview infrastructure
      init:
        - cp "${TUGBOAT_ROOT}/.tugboat/settings.php" /var/govcms/docroot/sites/default/

      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:

      # Commands that build the site. This is where you would add things
      # like feature reverts or any other drush commands required to
      # set up or configure the site. When a preview is built from a
      # base preview, the build workflow starts here, skipping the init
      # and update steps, because the results of those are inherited
      # from the base preview.
      build:
        # We are testing the latest distro, add a "tugboat-latest" branch we can reference via composer in our test site.
        - git reset --hard
        - git checkout -b tugboat-latest

        # Tell the GovCMS project to use this "tugboat-latest" tag.
        # @todo remove references to satis once upstreams are all using satis.
        - cd /var/govcms && cp composer.json composer-copy.json && cat composer-copy.json | jq .repositories='{"govcms":{"type":"composer","url":"https://satis.govcms.gov.au"},"latest":{"type":"path","url":"/var/lib/tugboat"},"packagist.org":false}' | tee composer.json
        - composer --working-dir=/var/govcms require govcms/govcms:dev-tugboat-latest
        - mkdir -p "/var/govcms/docroot/sites/default/files"
        - chgrp -R www-data "/var/govcms/docroot/sites/default/files"
        - find "/var/govcms/docroot/sites/default/files" -type d -exec chmod 2775 {} \;
        - find "/var/govcms/docroot/sites/default/files" -type f -exec chmod 0664 {} \;

        # Install the site.
        - composer --working-dir=/var/govcms update
        - cd /var/govcms && drush -r /var/govcms/docroot site-install govcms install_configure_form.update_status_module='array(FALSE,FALSE)' -y
        - cd /var/govcms && drush -r /var/govcms/docroot pm-enable govcms8_default_content -y

        # Prune the database a little.
        - cd /var/govcms && drush cache-rebuild

      visualdiffs:
        - /
        - /test
        - /blog/example
        - /events

  # What to call the service hosting MySQL. This name also acts as the
  # hostname to access the service by from the php service.
  mysql:
    # Use the latest available 5.x version of MySQL
    image: tugboatqa/mysql:5

    # A set of commands to run while building this service
    commands:
      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:
        # Copy a database dump from an external server. The public
        # SSH key found in the Tugboat Repository configuration must be
        # copied to the external server in order to use scp.
        # - scp user@example.com:database.sql.gz /tmp/database.sql.gz
        # - zcat /tmp/database.sql.gz | mysql tugboat
        # - rm /tmp/database.sql.gz
